---
import GuestbookForm from "./GuestbookForm.astro";

import ReviewsBox from "./ReviewsBox.astro";
---

<section>
  <h2>Reviews</h2>
  <div id="ReviewsBox">
    <div id="LeftArrow">
      <svg width="10" height="26" viewBox="0 0 10 26" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M9 25L1 13.2293L9 1" stroke="black"></path>
      </svg>
    </div>
    <div>
      <ReviewsBox reviewSource="google_reviews" />
      <ReviewsBox reviewSource="guestbook" />
    </div>
    <div id="RightArrow">
      <svg width="10" height="26" viewBox="0 0 10 26" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M1 25L9 13.2293L1 1" stroke="black"></path>
      </svg>
    </div>
  </div>

  <div class="reviews_buttons_box">
    <div class="google_reviews">google reviews</div>
    <div class="guestbook">Guestbook</div>
  </div>
  <GuestbookForm />
</section>

<style>
  section {
    display: grid;
    place-items: center;
    gap: 0.5rem;
    padding-block: 4rem;
  }
  #ReviewsBox {
    display: grid;
    place-items: center;
    grid-template-columns: 30px 1fr 30px;
    width: 100%;
    padding-block: 3rem;
    border-bottom: 1px solid var(--custom_black);
  }
  .reviews_buttons_box {
    display: grid;
    place-items: center;
    width: 100%;
    padding: 2rem;
    gap: 1.5rem;
    padding-block: 2rem;
  }
  .reviews_buttons_box div {
    color: var(--light_blue);
    border-style: double;

    text-transform: uppercase;
    font-size: clamp(1rem, 1.5rem, 3vw);
    text-decoration: none;
    padding: 0.75rem;
    outline: 1px solid var(--light_blue);
    width: 100%;
    max-width: 250px;
    text-align: center;
  }
  .vanish {
    display: none;
  }
  @media (min-width: 1150px) {
    #ReviewsBox {
      width: fit-content;
    }
    .reviews_buttons_box {
      grid-template-columns: repeat(2, auto);
      justify-content: center;
    }
    .reviews_buttons_box div {
      transition: all 0.3s ease-in-out;
    }
    .reviews_buttons_box div:hover {
      background-color: var(--dark_blue);
      color: var(--custom_white);
    }
    #RightArrow,
    #LeftArrow {
      transition: all 0.3s ease-in-out;
      cursor: pointer;
      padding: 1rem;
    }
    #RightArrow:hover,
    #LeftArrow:hover {
      transform: scale(1.5);
    }
  }
</style>
<script>
  /* Databasevalg */
  let reviewDatabase = "google_reviews";
  document.getElementById("reviewContent_guestbook").style.display = "none";
  const buttons = document.querySelector(".reviews_buttons_box").childNodes;


  buttons.forEach((button) => button.addEventListener("mousedown", pickDatabase));

  function pickDatabase() {

    reviewDatabase = this.classList[0];

    reviewContent = document.getElementById("reviewContent_" + reviewDatabase);

    if (this.classList.contains("google_reviews")) {
      document.getElementById("reviewContent_guestbook").style.display = "none";
      document.getElementById("reviewContent_google_reviews").style.display = "grid";
    } else if (this.classList.contains("guestbook")) {
      document.getElementById("reviewContent_google_reviews").style.display = "none";
      document.getElementById("reviewContent_guestbook").style.display = "grid";
    }
  }
  /* Databasevalg */
  /* reviewScroll */
  let currentView = 0;
  let reviewContent = document.getElementById("reviewContent_" + reviewDatabase);

  const rightArrow = document.getElementById("RightArrow");

  rightArrow.addEventListener("click", nextReview);

  function nextReview() {
    if (currentView != reviewContent.children.length - 1) {
      currentView++;
    }
    currentReview();
  }
  const leftArrow = document.getElementById("LeftArrow");

  leftArrow.addEventListener("click", prevReview);

  function prevReview() {
    if (currentView != 0) {
      currentView += -1;
    }
    currentReview();
  }
  function currentReview() {
    for (let i = 0; i < reviewContent.children.length; i++) {
      if (reviewContent.children[i] != reviewContent.children[currentView]) {
        reviewContent.children[i].style.display = "none";
      } else {
        reviewContent.children[i].style.display = "grid";
      }
    }
  }
  currentReview();
  /* reviewScroll */
</script>
