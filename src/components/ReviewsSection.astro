---
import ReviewsCard from "./ReviewsCard.astro";

const apiUrl = "https://znpuvpweojnqtmfuiiqr.supabase.co/rest/v1/reviews?approval=is.true";

const apiKey =
  "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpucHV2cHdlb2pucXRtZnVpaXFyIiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODQ5MjIxNzgsImV4cCI6MjAwMDQ5ODE3OH0.1r8u1kfw4xPxzwjf46FeUeGkL_5P9MWRzr5DdtsHNKs";

const response = await fetch(apiUrl, {
  method: "GET",
  headers: {
    apikey: apiKey,
    Accept: "application/json",
    "Content-Type": "application/json",
  },
});
const review = await response.json();
---

<section>
  <h2>Reviews</h2>

  <div id="ReviewsBox">
    <div id="LeftArrow">
      <svg width="10" height="26" viewBox="0 0 10 26" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M9 25L1 13.2293L9 1" stroke="black"></path>
      </svg>
    </div>
    <div id="reviewContent">
      {
        review.map((test) => {
          return <ReviewsCard Navn={test.reviewNavn} Stars={test.reviewStars} Text={test.reviewText} />;
          console.log(test.reviewStars);
        })
      }
    </div>
    <div id="RightArrow">
      <svg width="10" height="26" viewBox="0 0 10 26" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M1 25L9 13.2293L1 1" stroke="black"></path>
      </svg>
    </div>
  </div>

  <div class="reviews_buttons_box">
    <a href="https://goo.gl/maps/ANDT8Xss7Wv6u9TB8">Google Reviews</a>
    <a href="guestbook.html">Guestbook</a>
  </div>
</section>

<style>
  section {
    display: grid;
    place-items: center;
    gap: 0.5rem;
    padding-block: 1.5rem;
  }
  #ReviewsBox {
    display: grid;
    place-items: center;
    grid-template-columns: 30px 1fr 30px;
    width: 100%;
  }
  .reviews_buttons_box {
    display: grid;
    place-items: center;
    width: 90%;
    padding: 2rem;
    gap: 1.5rem;
    padding-block: 1rem;
    margin-top: 2rem;
    border-top: 1px solid black;
  }
  .reviews_buttons_box a {
    font-family: raleway, sans-serif;
    font-weight: 400;
    font-style: normal;
    color: var(--custom_black);
    text-transform: uppercase;
    font-size: clamp(1rem, 1.5rem, 3vw);
    text-decoration: none;
    padding: 0.75rem;
    outline: 1px solid var(--custom_black);
    width: 100%;
    max-width: 250px;
    text-align: center;
  }
  @media (min-width: 1150px) {
    #ReviewsBox {
      width: fit-content;
    }
    .reviews_buttons_box {
      grid-template-columns: repeat(2, auto);
      justify-content: center;
      border-top: 2px solid var(--custom_black);
      border-bottom: 2px solid var(--custom_black);
    }
  }
</style>

<script>
  let currentView = 0;
  const reviewContent = document.getElementById("reviewContent");

  const rightArrow = document.getElementById("RightArrow");

  rightArrow.addEventListener("click", nextReview);

  function nextReview() {
    if (currentView != reviewContent.children.length - 1) {
      currentView++;
    }
    currentReview();
  }
  const leftArrow = document.getElementById("LeftArrow");

  leftArrow.addEventListener("click", prevReview);

  function prevReview() {
    if (currentView != 0) {
      currentView += -1;
    }
    currentReview();
  }

  function currentReview() {
    for (let i = 0; i < reviewContent.children.length; i++) {
      if (reviewContent.children[i] != reviewContent.children[currentView]) {
        reviewContent.children[i].style.display = "none";
      } else {
        reviewContent.children[i].style.display = "grid";
      }
    }
  }
  currentReview();

</script>
